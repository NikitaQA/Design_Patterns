// e.g 1.  a single DB connection shared by multiple objects as creating a separate DB connection for every object may be costly.
2. Single printer creating it's own object for printing multiple applications docs. Those applications using printer object to print docs.
Can queued next doc until first one prints then reuse obj by other one to print doc.

/** eager initialization - create instance at the time of class loading **/

class Singlton {
//eager initialization
private static Singlton s1 = new Singlton();

private Singlton() { }

public static Singlton getInstance () {
return s1;
} 

public void display() {
SOP ("Hi");
}
}

class Test {
main() {
Singlton s2 = Singlton.getInstance();
s2.display();
}
}

/** lazy initialization - create instance when required **/

class Singlton {
private static Singlton s1;

private Singlton() { }

public static Singlton getInstance () {
if(s1 == null)
{
   // lazy initialization
     synchronized(Singlton.class)
    {
        // chk again for null as till above null checking many threads can come
    if(s1 == null) {
        s1 = new Singlton();
    }
  }
}
     return s1;
} 

public void display() {
SOP ("Hi");
}
}

class Test {
main() {
Singlton s2 = Singlton.getInstance();
s2.display();
}
}


